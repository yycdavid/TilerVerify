Input detector:

(100 samples, legal)
- NN inference: 0.0025s/input
- naive implementation: 1.138s/input
- guided: 0.069s/input

(20 samples, noisy)
- NN inference: 0.0048s/input
- naive: 0.979s/input
- guided: 0.090s/input


1000 samples
noisy: 0.0949s/input 1000 False
legal: 0.0431s/input 1000 True
different scene: 0.0528s/input, 1000 False


Case study on Lidar:
Milestones:
- Implement input generator, able to take Lidar images (DONE)
- Train network (DONE), compute bounding boxes,
- do verification
- Plot and analyze results

In analysis for lidar, remember to revert axes when plotting heatmaps (indices traverse distance first )


04212020 Plan
- Adaptive tiling
    - add flag to parallel_verify (generate bounding boxes) to read in list of unsolved boxes and divide further. Save in sub-directory (DONE)
    - add flag to verify_thread.jl to set timeout
    - add flag to thread_collect.jl to save unsolved to a separate file (DONE)
    - Use loop in shell script to control when to stop (checking file exists)
- Run adaptive tiling for road case, compare time with normal run

- BNN

- (then maybe run adaptive tiling for lidar case)
